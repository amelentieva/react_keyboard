{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","setKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,OAAS,SAACC,GACR,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,UAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,UAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,8BACGF,KAAKR,MAAMC,WAAX,mCAC+BO,KAAKR,MAAMC,WAD1C,KAEG,kCAvBd,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.e2e3f307.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.setKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.setKey);\n  }\n\n  setKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}